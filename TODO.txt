This is a temporary TODOs file for things that are to be done later on in the language.
This will (likely) be deleted once Zymux's development is mostly finished.

----------------------------------------------------------------------------------------------------

Allow backslashes at lexer to skip escapes (like skipping a newline before it happens).
Also, allow escaping actual escapes in strings?

Name the slash/backslash that seperates folders of imports "delimiter".

"nothing" keyword which assigns to nothing. Useful for throwaway assignments in multi-assignments.
Also, maybe can be used with "is" in order to mean an "empty" datatype
(like 0 for int, "" for strings, [] for lists, and {} for maps instead of null?).

Issue warnings for weird edge cases for the language. Example:
    AST finding the expression condition of an if/while to be an assignment.
(Allow warnings to be disabled with a certain flag or something)

When importing a new module and setting a new VM temporarily, change the GC's vm to that VM until
it finishes executing the module, after that set it back to the older VM so the GC can work on its
objects. This should be fine to do if only one module can be creating/collecting objects at a time.

----------------------------------------------------------------------------------------------------

Optimization:
    1. Heavily optimize memory usage in parser by traversing the AST for freeing nodes
        instead of having a linked list. This saves the need for an 8 byte "next" pointer.
        Potentially use an arena to avoid the linked list for objects too, as all objects
        are in front of each other in the arena. Might also increase or even decrease performance?
        Gotta benchmark it, though.

    2. Optimize node memory for unary/binary nodes by storing their operation token as just
        the source position and a token type enum value.

    3. Change certain macros to use the normal type instead of pointer to optimize dereferencing.
        (In other words, use the dot operator instead of the arrow).

----------------------------------------------------------------------------------------------------

make maps uniterable and instead call a method that retrives the map as a 2d list,
which is a list of 2 element lists that represent the key and value. This will be done
only when fields and methods are added to built-in objects.

Improve the positioning of some bytecode for error handling.

----------------------------------------------------------------------------------------------------

Add command line.
Add the keyword "private".
Add more built-ins.
Add file operations (part of built-ins).
