This is a temporary TODOs file for things that are to be done later on in the language.
This will (likely) be deleted once Zymux's development is mostly finished.

----------------------------------------------------------------------------------------------------

Allow backslashes at lexer to skip escapes (like skipping a newline before it happens).
Also, allow escaping actual escapes in strings?

"nothing" keyword which assigns to nothing. Useful for throwaway assignments in multi-assignments.
Also, maybe can be used with "is" in order to mean an "empty" datatype
(like 0 for int, "" for strings, [] for lists, and {} for maps instead of null?).

Issue warnings for weird edge cases for the language. Example:
    AST finding the expression condition of an if/while to be an assignment.
(Allow warnings to be disabled with a certain flag)

----------------------------------------------------------------------------------------------------

Optimization:
    1. More efficient vm loops with dispatch tables utilizing goto.

    2. Optimize node memory for unary/binary nodes by storing their operation token as just
        the source position and a token type enum value.

    3. Change certain macros to use the normal type instead of pointer to optimize dereferencing.
        (In other words, use the dot operator instead of the arrow).

----------------------------------------------------------------------------------------------------

make maps uniterable and instead call a method that retrieves the map as a 2d list,
which is a list of 2 element lists that represent the key and value. This will be done
only when fields and methods are added to built-in objects.

Improve the positioning of some bytecode for error handling.

----------------------------------------------------------------------------------------------------

Bugs:
Backslash at the end of file name goes into REPL?
Inexistent file names in REPL yield errno 14 because we try to resolve absolute file before reading.
